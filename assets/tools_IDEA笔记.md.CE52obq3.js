import{_ as e,c as a,o as t,a3 as i}from"./chunks/framework.C6jertZK.js";const l="/assets/424830-20210720151046601-1477739148.DE4-VQHl.png",r="/assets/image-20230913182219976.Cwjycjkd.png",k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"tools/IDEA笔记.md","filePath":"tools/IDEA笔记.md"}'),o={name:"tools/IDEA笔记.md"},s=i(`<h2 id="一、配置" tabindex="-1">一、配置 <a class="header-anchor" href="#一、配置" aria-label="Permalink to &quot;一、配置&quot;">​</a></h2><h3 id="vm配置" tabindex="-1">vm配置 <a class="header-anchor" href="#vm配置" aria-label="Permalink to &quot;vm配置&quot;">​</a></h3><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Dfile.encoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=UTF-8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-Xverify:none</span></span></code></pre></div><h3 id="字体" tabindex="-1">字体 <a class="header-anchor" href="#字体" aria-label="Permalink to &quot;字体&quot;">​</a></h3><p>首先，IDEA自身界面的字体，保持默认即可。Appearance，字体Microsoft YaHei UI，大小12。</p><p>然后，编辑器的字体，根据自身情况设置。Editor-&gt;Font，字体Monospaced，大小17，行高1.0。(2021.1版本)</p><h3 id="取消-autowired错误警告" tabindex="-1">取消@Autowired错误警告 <a class="header-anchor" href="#取消-autowired错误警告" aria-label="Permalink to &quot;取消@Autowired错误警告&quot;">​</a></h3><p>解决办法就是将错误提示修改为警告提示。</p><p><img src="`+l+'" alt="img"></p><h3 id="取消变量下划线提示" tabindex="-1">取消变量下划线提示 <a class="header-anchor" href="#取消变量下划线提示" aria-label="Permalink to &quot;取消变量下划线提示&quot;">​</a></h3><p><img src="'+r+'" alt="image-20230913182219976"></p><p>Filt -- Setting -- Editor -- Color Scheme -- Java ，点击下方需要修改代码，看到最右侧有显示效果Effects。可以直接取消Effects前的√ ，或者将underscored换成其它效果。</p><h2 id="二、插件" tabindex="-1">二、插件 <a class="header-anchor" href="#二、插件" aria-label="Permalink to &quot;二、插件&quot;">​</a></h2><ul><li><p>Lombok(已内置)</p></li><li><p>Docker(已内置)</p></li><li><p>MapStruct Support</p></li><li><p>.ignore</p></li><li><p>Chinese Language Pack</p></li><li><p>Gitee</p></li><li><p>Kubernetes</p></li><li><p>Maven Helper</p></li><li><p>MyBatisX</p></li><li><p>RestfulToolkit-fix (依赖kotlin)</p></li><li><p>Alibaba Java Coding Guidelines</p></li><li><p>Apifox Helper</p></li></ul><p>AI相关</p><ul><li>Codeium</li><li>GitHub copilot</li><li>Tabnine：AI Code Completion</li></ul><p><strong>JUnitGenerator V2.0</strong></p><p>1.安装JUnitGenerator V2.0插件，重启。然后进行配置 Settings-&gt;Other Settings-&gt;JUnit Generator，在右侧Properties中设置： Output Path:</p><p>将SOURCEPATH/test/{PACKAGE}/FILENAME改为{SOURCEPATH}/SOURCEPATH/../../test/java/ {PACKAGE}/FILENAMEDefaultTemplate：设为JUnit4</p><p>在右侧JUnit4中设置模板：package的声明，把默认的test前缀去掉。另外date改为$today</p><p>2.使用 打开要测试的类文件，在Code菜单栏中选中Generate(快捷键：Alt+Insert)，在JUnit Test中选择JUnit4即可。</p><h2 id="三、过时" tabindex="-1">三、过时 <a class="header-anchor" href="#三、过时" aria-label="Permalink to &quot;三、过时&quot;">​</a></h2><h3 id="jrebel插件" tabindex="-1">Jrebel插件 <a class="header-anchor" href="#jrebel插件" aria-label="Permalink to &quot;Jrebel插件&quot;">​</a></h3><p>这个简直是web开发者的神器，可以修改代码后，不用编译，自动帮你编译，实现热部署。 <a href="https://www.cnblogs.com/wang1024/p/7211194.html" target="_blank" rel="noreferrer">Jrebel安装、破解、使用</a></p><h3 id="jquery自动补全设置" tabindex="-1">jquery自动补全设置 <a class="header-anchor" href="#jquery自动补全设置" aria-label="Permalink to &quot;jquery自动补全设置&quot;">​</a></h3><p>参考：<a href="https://www.cnblogs.com/ShaYeBlog/p/6845564.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/ShaYeBlog/p/6845564.html</a></p><ol><li>打开Settings，Languages &amp; Frameworks &gt; JavaScript &gt; Libraries 选择Add...(也可以选择Download，让ide自动下载完成)</li><li>名称自己定，Framework type下拉框选jquery，然后下面手动选择本地的Jquery.js文件，在下面添加说明文档，网址为 api.jquery.com , 然后选择下载到本地以加快显示速度</li><li>之后就可以正确的补全，同时也有文档显示了，其他的库添加方法也类似</li></ol>',27),n=[s];function p(h,d,c,u,m,g){return t(),a("div",null,n)}const _=e(o,[["render",p]]);export{k as __pageData,_ as default};
